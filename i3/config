# ==============
# Config
# ==============

# mod — Win
set $mod Mod4
# mod — Alt
set $alt Mod1

# mod+mouse — move/resize windows
floating_modifier $mod

# 1px window border. recommended to mod+Shift+b whenever possible, borders look bad
for_window [class="^.*"] border pixel 1

# gaps, keep in order apparently
gaps inner 15
gaps outer 25

# ==============
# Startup Programs
# ==============

# middle mouse scrolling. be careful to always see at least one scroll tick before releasing middle mouse, otherwise many programs will "helpfully" paste your clipboard because that is clearly what the middle mouse button is for. Note that some programs will scroll smoothly and others will scroll in chunks, even if these programs support smooth scrolling.
exec --no-startup-id xinput --set-prop "USB Optical Mouse" 'libinput Scroll Method Enabled' 0, 0, 1
exec --no-startup-id xinput --set-prop "USB Optical Mouse" 'libinput Button Scrolling Button' 2

# input settings
# Shift+numlock — temporarily enable pointer keys. pointer keys will disable at random at some future point in time and must be re-enabled. always test numpad in a safe place before using pointer keys
# ralt — compose key
# ContextMenu — compose key (alternate)
# CapsLock — fowards delete
exec --no-startup-id setxkbmap -option keypad:pointerkeys
exec --no-startup-id setxkbmap -option compose:ralt
exec --no-startup-id xmodmap -e "keycode 135 = Multi_key Multi_key Multi_key Multi_key"
exec --no-startup-id xmodmap -e "keycode 66 = Delete NoSymbol Delete"

# other programs.
# start xfce4-notifyd because one update it randomly decided not to start and no notifyd = every program hangs when it tries to send a notification and the entire system is broken. note that with full notification logging, notification sending will get progressively slower over time (it can take more than 500ms to send a notification) and because apps freeze while sending notifications, this can cause app unresponsiveness. if you are noticing app unresponsiveness check, time notify-send a -i notifications. this issue is because xfce4-notifyd logs notifications by parsing the entire previous log into dictionaries, adding a single entry to the end, and then re-printing the entire file. instead of appending to the file. to work around this, occasionally go to ~/.cache/xfce4/notifyd and mv log somewhere. a new log will be created. (or actually fix the problem in the xfce source code, that works too)
# start xfce panel. started with disable-wm-check to make it not wait 10 years before starting.
# use xrandr to config DP-0 output
exec --no-startup-id systemctl --user start xfce4-notifyd
exec --no-startup-id xfce4-panel --disable-wm-check
exec --no-startup-id xrandr --output DP-0 --mode 1920x1080 --rate 239.76

# recommended i3 font for some reason
font pango:monospace 8

# ==============
# Bindings
# ==============

# mod+enter — launch terminal
bindsym $mod+Return exec --no-startup-id xfce4-terminal --default-working-directory ~/Dev/Node/temp/waiting

# mod+shift+q — close window
bindsym $mod+Shift+q kill

# mod+x, mod+c — swap windows (mark with x, swap with c)
bindsym --whole-window $mod+x mark --add quickswap
bindsym --whole-window $mod+c swap container with mark quickswap; [con_mark="quickswap"] focus

# mod+space — launch apps (whiskermenu)
bindsym $mod+space exec --no-startup-id xfce4-popup-whiskermenu

# alt+tab — remind you to not press alt+tab by showing a useless and painful alt+tab menu
bindsym $alt+Tab exec --no-startup-id rofi -show window

# alt+l, alt+shift+l — unicode character entry (shift to copy character, noshift to type character)
bindsym $mod+l exec --no-startup-id fish -c 'xdotool type (unipicker --command "rofi -dmenu")'
bindsym $mod+Shift+l exec --no-startup-id fish -c 'echo -n (unipicker --command "rofi -dmenu") | copy && notify-send Copied (paste) -i notifications'

# mod+arrows — move focus to a container vaguely related to the direction you press
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# mod+a, mod+d — focus p[a]rent/chil[d] container 
bindsym $mod+a focus parent
bindsym $mod+d focus child

# mod+Shift+arrows — move the focused container to a random location vaguely related to the direction you press
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# mod+h, mod+v — insert next window rig[h]t/do[v]vn
bindsym $mod+h split h
bindsym $mod+v split v

# mod+f — toggle fullscreen
bindsym $mod+f fullscreen toggle

# mod+u, mod+t — add vertic[u]l/horizon[t]al tabs to the container above the focused window
bindsym $mod+u layout stacking
bindsym $mod+t layout tabbed

# mod+y — rotate the container above the focused window
bindsym $mod+y layout toggle split

# mod+Shift+u — toggle floating on the active window or container
bindsym $mod+Shift+u floating toggle

# change focus between tiling / floating windows
#bindsym $mod+t focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# take a screenshot
# bindsym $mod+Print exec sharenix-section -n
bindsym $mod+Print exec flameshot gui

# focus the child container
#bindsym $mod+d focus child

# way too much config file to set 12 workspace names. a for loop would be nice here
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $wsE "E"
set $wsR "R"

# mod+0-9/e/r — switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+e workspace $wsE
bindsym $mod+r workspace $wsR


# mod+0-9/e/r — move window/container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym $mod+Shift+e move container to workspace $wsE
bindsym $mod+Shift+r move container to workspace $wsR

# mod+Shift+b, mod+Shift+n — disa[b]le/e[n]able borders on focused window
bindsym $mod+Shift+b border pixel 0
bindsym $mod+Shift+n border pixel 1
